name: CD - Deploy Changed MFEs & Shell

on:
  push:
    branches:
      - master

permissions:
  actions: read
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      affected_apps: ${{ steps.set-affected.outputs.affected_apps }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Set NX SHAs
        uses: nrwl/nx-set-shas@v4

      - name: Determine Affected Apps
        id: set-affected
        run: |
          AFFECTED_APPS=$(npx nx print-affected --type=app --select=projects --json | jq -c '.projects')
          echo "affected_apps=$AFFECTED_APPS" >> $GITHUB_ENV
          echo "affected_apps=$AFFECTED_APPS" >> $GITHUB_OUTPUT

      - name: Display Affected Apps
        run: |
          echo "Affected Apps: ${{ env.affected_apps }}"

      - name: Build Affected Apps
        run: npx nx affected -t build --exclude=libs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ needs.build.outputs.affected_apps != '[]' && needs.build.outputs.affected_apps != '' }}
    strategy:
      matrix:
        app: ${{ fromJson(needs.build.outputs.affected_apps) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy ${{ matrix.app }} to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets[format('AZURE_STATIC_WEB_APPS_API_TOKEN_{0}', matrix.app)] }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "dist/apps/${{ matrix.app }}"
          output_location: ""
